import { block, category, categoryToolbox, type Toolbox } from './utils';

export default categoryToolbox([
  category(
    { name: '条件分岐' },
    [
      'logic_boolean',
      'controls_if',
      'controls_ifelse',
      'logic_compare',
      'logic_operation',
      'logic_negate',
      'logic_null',
      'logic_ternary',
      'controls_if_if',
      'controls_if_elseif',
      'controls_if_else',
    ].map((type) => block({ type })),
  ),
  category(
    { name: 'ループ' },
    [
      'controls_repeat_ext',
      'controls_repeat',
      'controls_whileUntil',
      'controls_for',
      'controls_forEach',
      'controls_flow_statements',
    ].map((type) => block({ type })),
  ),
  category(
    { name: '数学' },
    [
      'math_number',
      'math_arithmetic',
      'math_single',
      'math_trig',
      'math_constant',
      'math_number_property',
      'math_change',
      'math_round',
      'math_on_list',
      'math_modulo',
      'math_constrain',
      'math_random_int',
      'math_random_float',
      'math_atan2',
    ].map((type) => block({ type })),
  ),
  category(
    { name: 'テキスト' },
    [
      'text',
      'text_join',
      'text_create_join_container',
      'text_create_join_item',
      'text_append',
      'text_length',
      'text_isEmpty',
      'text_indexOf',
      'text_charAt',
      'text_getSubstring',
      'text_changeCase',
      'text_trim',
      'text_print',
      'text_prompt_ext',
      'text_prompt',
      'text_count',
      'text_replace',
      'text_reverse',
    ].map((type) => block({ type })),
  ),
  category(
    { name: '配列' },
    [
      'lists_create_empty',
      'lists_repeat',
      'lists_reverse',
      'lists_isEmpty',
      'lists_length',
      'lists_create_with',
      'lists_create_with_container',
      'lists_create_with_item',
      'lists_indexOf',
      'lists_getIndex',
      'lists_setIndex',
      'lists_getSublist',
      'lists_sort',
      'lists_split',
    ].map((type) => block({ type })),
  ),
  category(
    { name: '関数' },
    [
      'procedures_defnoreturn',
      'procedures_defreturn',
      'procedures_mutatorcontainer',
      'procedures_mutatorarg',
      'procedures_callnoreturn',
      'procedures_callreturn',
      'procedures_ifreturn',
    ].map((type) => block({ type })),
  ),
  category(
    { name: '変数' },
    ['variables_get', 'variables_set'].map((type) => block({ type })),
  ),
  category(
    { name: '変数' },
    ['variables_get_dynamic', 'variables_set_dynamic'].map((type) =>
      block({ type }),
    ),
  ),
]) satisfies Toolbox;
